/* App name */
"About.appName.android" = "BRD";
/* About screen blog label */
"About.blog" = "Blog";
/* About screen footer */
"About.footer" = "Made by the global BRD team. Version %1$@ Build %2$@";
/* Privay Policy button label */
"About.privacy" = "Privacy Policy";
/* About screen reddit label */
"About.reddit" = "Reddit";
/* Terms of Use button label */
"About.terms" = "Terms of Use";
/* About screen title */
"About.title" = "About";
/* About screen twitter label */
"About.twitter" = "Twitter";
/* About screen wallet ID label */
"About.walletID" = "BRD Rewards ID";
/* Close modal button accessibility label */
"AccessibilityLabels.close" = "Close";
/* Support center accessibiliy label */
"AccessibilityLabels.faq" = "Support Center";
/* Account balance */
"Account.balance" = "Balance";
/* $10000 per BTC */
"Account.exchangeRate" = "%1$@ per %2$@";
/* Loading Wallet Message */
"Account.loadingMessage" = "Loading Wallet";
/* Default wallet name */
"AccountHeader.defaultWalletName" = "My BRD";
/* Third party keyboard warning */
"Alert.customKeyboard.android" = "It looks like you are using a third-party keyboard, which can record what you type and steal your Paper Key. Please switch to the default Android keyboard for extra protection.";
/* Error alert title */
"Alert.error" = "Error";
/* Keystore error */
"Alert.keystore.generic.android" = "There is a problem with your Android OS keystore, please contact support@breadwallet.com";
/* KeyStore error, keys are invalidated */
"Alert.keystore.invalidated.android" = "Your BRD encrypted data was recently invalidated because your Android lock screen was disabled.";
/* Keystore error title */
"Alert.keystore.title.android" = "Android KeyStore Error";
/* No internet alert message */
"Alert.noInternet" = "No internet connection found. Check your connection and try again.";
/* Request timed out error message */
"Alert.timedOut" = "Request timed out. Check your connection and try again.";
/* Warning alert title */
"Alert.warning" = "Warning";
/* 'the addresses were copied'' Alert title */
"Alerts.copiedAddressesHeader" = "Addresses Copied";
/* Addresses Copied Alert sub header */
"Alerts.copiedAddressesSubheader" = "All wallet addresses successfully copied.";
/* Alert Header Label (the paper key was set) */
"Alerts.paperKeySet" = "Paper Key Set";
/* Alert Subheader label (playfully positive) */
"Alerts.paperKeySetSubheader" = "Awesome!";
/* Alert Header label (the PIN was set) */
"Alerts.pinSet" = "PIN Set";
/* Send failure alert header label (the send failed to happen) */
"Alerts.sendFailure" = "Send failed";
/* Send success alert header label (confirmation that the send happened) */
"Alerts.sendSuccess" = "Send Confirmation";
/* Send success alert subheader label (e.g. the money was sent) */
"Alerts.sendSuccessSubheader" = "Money Sent!";
/* Fingerprint was recognized by the scanner */
"Alerts.touchIdSucceeded.android" = "Fingerprint recognized";
/* Tell the user where they can enable permissions to access device storage. */
"Android.allowFileSystemAccess" = "Please enable storage permissions in your device settings: \"Settings\" > \"Apps\" > \"BRD\" > \"Permissions\".";
/* The "home" screen is the name of the top level menu for the app. */
"Android.BCH.welcome.message" = "Any BCH in your wallet can be accessed through the home screen.";
/* Warning about using apps that can alter the screen */
"Android.screenAlteringMessage" = "BRD will not function properly unless screen-altering apps (such as Twilight) are disabled.";
/* An app that alters the screen ("screen-altering app") has been detected. */
"Android.screenAlteringTitle" = "Screen-Altering App Detected";
/* JSON Serialization error message */
"ApiClient.jsonError" = "JSON Serialization Error";
/* Wallet not ready error message */
"ApiClient.notReady" = "Wallet not ready";
/* API Token error message */
"ApiClient.tokenError" = "Unable to retrieve API token";
/* Send BCH view body. */
"BCH.body" = "Enter a destination BCH address below. All BCH in your wallet at the time of the fork (%1$@) will be sent.";
/* Confirm sending <$5.00> to <address>? */
"BCH.confirmationMessage" = "Confirm sending %1$@ to %2$@";
/* Confirmation alert title */
"BCH.confirmationTitle" = "Confirmation";
/* Generic bch erorr message */
"BCH.genericError" = "Your account does not contain any BCH, or you received BCH after the fork.";
/* Transaction ID copied message */
"BCH.hashCopiedMessage" = "Transaction ID copied";
/* No address error message */
"BCH.noAddressError" = "Please enter an address";
/* Attempted to scan unsupported qr code error message. */
"BCH.paymentProtocolError" = "Payment Protocol Requests are not supported for BCH transactions";
/* BCH successfully sent alert message */
"BCH.successMessage" = "BCH was successfully sent.";
/* Widthdraw BCH view title */
"BCH.title" = "Withdraw BCH";
/* Tx Hash button header */
"BCH.txHashHeader" = "BCH Transaction ID";
/* Approve button label */
"BitID.approve" = "Approve";
/* <sitename> is requesting authentication using your bitcoin wallet */
"BitID.authenticationRequest" = "%1$@ is requesting authentication using your bitcoin wallet";
/* Deny button label */
"BitID.deny" = "Deny";
/* BitID error alert title */
"BitID.error" = "Authentication Error";
/* BitID error alert message (The payment service you are trying to use isn't working. Please contact them, as you may need to try again) */
"BitID.errorMessage" = "Please check with the service. You may need to try again.";
/* BitID success alert title */
"BitID.success" = "Successfully Authenticated";
/* BitID Authentication Request alert view title */
"BitID.title" = "BitID Authentication Request";
/* As in "(tap here to) buy (bitcoin)" */
"Button.buy" = "Buy";
/* Cancel button label */
"Button.cancel" = "Cancel";
/* prompt continue button */
"Button.continueAction" = "Continue";
/* prompt dismiss button */
"Button.dismiss" = "Dismiss";
/* Button to return to the "home" screen (the home screen is the top menu). */
"Button.Home" = "Home";
/* Ignore button label */
"Button.ignore" = "Ignore";
/* menu button */
"Button.menu" = "Menu";
/* No button */
"Button.no" = "No";
/* OK button label */
"Button.ok" = "OK";
/* receive button */
"Button.receive" = "Receive";
/* Click this button to sell an asset */
"Button.sell" = "Sell";
/* send button */
"Button.send" = "Send";
/* Settings button label */
"Button.settings" = "Settings";
/* Settings button label */
"Button.submit" = "Submit";
/* Yes button */
"Button.yes" = "Yes";
/* Camera plugin instruction */
"CameraPlugin.centerInstruction" = "Center your ID in the box";
/* Amount to Send: ($1.00) */
"Confirmation.amountLabel" = "Amount to Send:";
/* Network Fee: ($1.00) */
"Confirmation.feeLabel" = "Network Fee:";
/* eg. Processing time: This transaction is predicted to complete in [10-60 minutes]. */
"Confirmation.processingTime" = "Processing time: This transaction is predicted to complete in %1$@.";
/* Label for "send" button on final confirmation screen */
"Confirmation.send" = "Send";
/* Confirmation Screen title */
"Confirmation.title" = "Confirmation";
/* To: (address) */
"Confirmation.to" = "To";
/* Total Cost: ($5.00) */
"Confirmation.totalLabel" = "Total Cost:";
/* Confirm paper phrase error message */
"ConfirmPaperPhrase.error" = "The words entered do not match your paper key. Please try again.";
/* Confirm paper phrase view label. */
"ConfirmPaperPhrase.label" = "To make sure everything was written down correctly, please enter the following words from your paper key.";
/* Word label eg. Word #1, Word #2 */
"ConfirmPaperPhrase.word" = "Word #%1$@";
/* Agree to legal terms button */
"Crowdsale.agree" = "Agree";
/* As in "(tap here to) buy (some) tokens" */
"Crowdsale.buyButton" = "Buy Tokens";
/* Decline to legal terms button */
"Crowdsale.decline" = "Decline";
/* Resume Idnetify verification button */
"Crowdsale.resume" = "Resume Verification";
/* Retry Identity verification button */
"Crowdsale.retry" = "Retry";
/* Bitcoin denomination picker label */
"DefaultCurrency.bitcoinLabel" = "Bitcoin Display Unit";
/* Exchange rate label */
"DefaultCurrency.rateLabel" = "Exchange Rate";
/* The wallet is disabled. */
"Disabled.title" = "Wallet disabled";
/* Service capabilities description */
"EME.permissions.accountRequest" = "Request %1$@ account information";
/* Service capabilities description */
"EME.permissions.callRequest" = "Request %1$@ smart contract call";
/* Service capabilities description */
"EME.permissions.paymentRequest" = "Request %1$@ payment";
/* Email unavailable alert title */
"ErrorMessages.emailUnavailableMessage" = "This device isn't configured to send email with the iOS mail app.";
/* Email unavailable alert title */
"ErrorMessages.emailUnavailableTitle" = "Email Unavailable";
/* Message that gets shown when we've detected the user has encountered the looping lock-screen bug. (preserve [ ] characters) */
"ErrorMessages.loopingLockScreen.android" = "BRD can not be authenticated due to a bug in your version of Android. [Please tap here for more information.]";
/* Messaging unavailable alert title */
"ErrorMessages.messagingUnavailableMessage" = "This device isn't configured to send messages.";
/* Messaging unavailable alert title */
"ErrorMessages.messagingUnavailableTitle" = "Messaging Unavailable";
/* Fingerprint was not recognized by the scanner, please try scanning again */
"ErrorMessages.touchIdFailed.android" = "Fingerprint not recognized. Please try again.";
/* You can customize your Face ID Spending Limit from the [menu] */
"FaceIDSettings.customizeText" = "You can customize your Face ID spending limit from the %1$@.";
/* Face Id screen label */
"FaceIDSettings.label" = "Use your face to unlock your BRD and send money up to a set limit.";
/* Title of the screen for setting the Face ID Spending Limit */
"FaceIDSettings.linkText" = "Face ID Spending Limit Screen";
/* Setting to turn on Face ID for BRD */
"FaceIDSettings.switchLabel" = "Enable Face ID for BRD";
/* Face ID settings view title */
"FaceIDSettings.title" = "Face ID";
/* Instructions on how to turn on face id on the iPhone. Please ensure the name of the menu in this string matches the wording Apple uses in the iPhone menu. */
"FaceIDSettings.unavailableAlertMessage" = "You have not set up Face ID on this device. Go to Settings->Face ID & Passcode to set it up now.";
/* Face ID unavailable alert title */
"FaceIDSettings.unavailableAlertTitle" = "Face ID Not Set Up";
/* Face Id spending limit screen title */
"FaceIDSpendingLimit.title" = "Face ID Spending Limit";
/* Economy fee */
"FeeSelector.economy" = "Economy";
/* E.g. [This transaction is predicted to complete in] 1-24 hours */
"FeeSelector.economyTime" = "1-24 hours";
/* Warning message for economy fee */
"FeeSelector.economyWarning" = "This option is not recommended for time-sensitive transactions.";
/* E.g. Estimated delivery: 10-60 minutes */
"FeeSelector.estimatedDeliver" = "Estimated Delivery: %1$@";
/* [This transaction will complete in] 2-5 minutes */
"FeeSelector.ethTime" = "2-5 minutes";
/* Regular fee */
"FeeSelector.regular" = "Regular";
/* E.g. [This transaction is predicted to complete in] 10-60 minutes */
"FeeSelector.regularTime" = "10-60 minutes";
/* Fee Selector title */
"FeeSelector.title" = "Processing Speed";
/* This is the section that allows administration of the user's wallet */
"HomeScreen.admin" = "Admin";
/* Home screen menu button to buy some bitcoin */
"HomeScreen.buy" = "Buy";
/* Menu button on the home screen toolbar */
"HomeScreen.menu" = "Menu";
/* This section lists the users wallets */
"HomeScreen.portfolio" = "Wallets";
/* Label for the total balance of all the user's assets (style is all lower case if your language permits) */
"HomeScreen.totalAssets" = "Total Assets";
/* (Tap here to) trade (your assets for other assets) */
"HomeScreen.trade" = "Trade";
/* Checking private key balance progress view text */
"Import.checking" = "Checking private key balance...";
/* Sweep private key confirmation message */
"Import.confirm" = "Send %1$@ from this private key into your wallet? The bitcoin network will receive a fee of %2$@.";
/* Duplicate key error message */
"Import.Error.duplicate" = "This private key is already in your wallet.";
/* empty private key error message */
"Import.Error.empty" = "This private key is empty.";
/* High fees error message */
"Import.Error.highFees" = "Transaction fees would cost more than the funds available on this private key.";
/* Not a valid private key error message */
"Import.Error.notValid" = "Not a valid private key";
/* Import signing error message */
"Import.Error.signing" = "Error signing transaction";
/* [Redeem] the funds stored on this private key. */
"Import.importButton" = "Import";
/* Importing wallet progress view label */
"Import.importing" = "Importing Wallet";
/* Caption for graphics */
"Import.leftCaption" = "Wallet to be imported";
/* Import wallet intro screen message */
"Import.message" = "Importing a wallet transfers all the money from your other wallet into your BRD wallet using a single transaction.";
/* Enter password alert view title */
"Import.password" = "This private key is password protected.";
/* password textfield placeholder */
"Import.passwordPlaceholder" = "password";
/* Caption for graphics */
"Import.rightCaption" = "Your BRD Wallet";
/* Scan Private key button label */
"Import.scan" = "Scan Private Key";
/* Import wallet success alert title */
"Import.success" = "Success";
/* Successfully imported wallet message body */
"Import.SuccessBody" = "Successfully imported wallet.";
/* Import Wallet screen title */
"Import.title" = "Import Wallet";
/* Unlocking Private key activity view message. */
"Import.unlockingActivity" = "Unlocking Key";
/* Import wallet intro warning message */
"Import.warning" = "Importing a wallet does not include transaction history or other details.";
/* Wrong password alert message */
"Import.wrongPassword" = "Wrong password, please try again.";
/* Close app button */
"JailbreakWarnings.close" = "Close";
/* Ignore jailbreak warning button */
"JailbreakWarnings.ignore" = "Ignore";
/* Jailbreak warning message */
"JailbreakWarnings.messageWithBalance" = "DEVICE SECURITY COMPROMISED\n Any 'jailbreak' app can access BRD's keychain data and steal your bitcoin! Wipe this wallet immediately and restore on a secure device.";
/* Jailbreak warning message */
"JailbreakWarnings.messageWithoutBalance" = "DEVICE SECURITY COMPROMISED\n Any 'jailbreak' app can access BRD's keychain data and steal your bitcoin. Please only use BRD on a non-jailbroken device.";
/* Jailbreak warning title */
"JailbreakWarnings.title" = "WARNING";
/* Wipe wallet button */
"JailbreakWarnings.wipe" = "Wipe";
/* Approve link wallet button label */
"LinkWallet.approve" = "Approve";
/* Decline link wallet button label */
"LinkWallet.decline" = "Decline";
/* Link Wallet view disclaimer footer */
"LinkWallet.disclaimer" = "External apps cannot send money without approval from this device";
/* Link Wallet view title above domain list */
"LinkWallet.domainTitle" = "Note: ONLY interact with this app when on one of the following domains";
/* Link wallet logo footer text */
"LinkWallet.logoFooter" = "Secure Checkout";
/* Link Wallet view title above permissions list */
"LinkWallet.permissionsTitle" = "This app will be able to:";
/* Link Wallet view title */
"LinkWallet.title" = "Link Wallet";
/* Location services disabled error */
"LocationPlugin.disabled" = "Location services are disabled.";
/* No permissions for location services */
"LocationPlugin.notAuthorized" = "BRD does not have permission to access location services.";
/* Wallet creation date prefix */
"ManageWallet.creationDatePrefix" = "You created your wallet on %1$@";
/* Manage wallet description text */
"ManageWallet.description" = "Your wallet name only appears in your account transaction history and cannot be seen by anyone else.";
/* Change Wallet name textfield label */
"ManageWallet.textFeildLabel" = "Wallet Name";
/* Manage wallet modal title */
"ManageWallet.title" = "Manage Wallet";
/* "Add [a] Wallet [to the home screen]" */
"MenuButton.addWallet" = "Add Wallet";
/* Menu button title */
"MenuButton.lock" = "Lock Wallet";
/* (Click here to) manage (your list of) wallets */
"MenuButton.manageWallets" = "Manage Wallets";
/* (press here to) scan (a) QR code */
"MenuButton.scan" = "Scan QR Code";
/* Menu button title */
"MenuButton.security" = "Security Settings";
/* Menu button title */
"MenuButton.settings" = "Settings";
/* Menu button title */
"MenuButton.support" = "Support";
/* button label */
"MenuViewController.createButton" = "Create New Wallet";
/* Menu modal title */
"MenuViewController.modalTitle" = "Menu";
/* button label */
"MenuViewController.recoverButton" = "Recover Wallet";
/* Switch to automatic mode button label */
"NodeSelector.automaticButton" = "Switch to Automatic Mode";
/* Node is connected label */
"NodeSelector.connected" = "Connected";
/* Node is connecting label */
"NodeSelector.connecting" = "Connecting";
/* Enter node ip address view body */
"NodeSelector.enterBody" = "Enter Node IP address and port (optional)";
/* Enter Node ip address view title */
"NodeSelector.enterTitle" = "Enter Node";
/* Switch to manual mode button label */
"NodeSelector.manualButton" = "Switch to Manual Mode";
/* Node address label */
"NodeSelector.nodeLabel" = "Current Primary Node";
/* Node is not connected label */
"NodeSelector.notConnected" = "Not Connected";
/* Node status label */
"NodeSelector.statusLabel" = "Node Connection Status";
/* Node Selector view title */
"NodeSelector.title" = "Bitcoin Nodes";
/* Eg. Send 1.0Eth to purchase CCC */
"PaymentConfirmation.amountText" = "Send %1$@ to purchase %2$@";
/* Payment confirmation view title */
"PaymentConfirmation.title" = "Confirmation";
/* Bad Payment request alert title */
"PaymentProtocol.Errors.badPaymentRequest" = "Bad Payment Request";
/* Error opening payment protocol file message */
"PaymentProtocol.Errors.corruptedDocument" = "Unsupported or corrupted document";
/* Missing certificate payment protocol error message */
"PaymentProtocol.Errors.missingCertificate" = "missing certificate";
/* Request expired payment protocol error message */
"PaymentProtocol.Errors.requestExpired" = "request expired";
/* Payment too small alert title */
"PaymentProtocol.Errors.smallOutputError" = "Couldn't make payment";
/* Amount too small error message */
"PaymentProtocol.Errors.smallPayment" = "Bitcoin payments can't be less than %1$@.";
/* Output too small error message. */
"PaymentProtocol.Errors.smallTransaction" = "Bitcoin transaction outputs can't be less than %1$@.";
/* Unsupported signature type payment protocol error message */
"PaymentProtocol.Errors.unsupportedSignatureType" = "unsupported signature type";
/* Untrusted certificate payment protocol error message */
"PaymentProtocol.Errors.untrustedCertificate" = "untrusted certificate";
/* Enable face ID prompt body */
"Prompts.FaceId.body" = "Tap Continue to enable Face ID";
/* Enable face ID prompt title */
"Prompts.FaceId.title" = "Enable Face ID";
/* No passcode set warning body */
"Prompts.NoPasscode.body" = "A device passcode is needed to safeguard your wallet. Go to settings and turn passcode on.";
/* No Passcode set warning title */
"Prompts.NoPasscode.title" = "Turn device passcode on";
/* Instruction how to enable device encryption */
"Prompts.NoScreenLock.body.android" = "A device screen lock is needed to safeguard your wallet. Go to \"Settings\" > \"Security\" > \"Screen lock\" and enable to continue.";
/* Device encryption prompt title */
"Prompts.NoScreenLock.title.android" = "Screen lock disabled";
/* Warning about paper key. */
"Prompts.PaperKey.body" = "Your Paper Key must be saved in case you ever lose or change your phone.";
/* An action is required (You must do this action). */
"Prompts.PaperKey.title" = "Action Required";
/* Transaction rejected prompt body */
"Prompts.RecommendRescan.body" = "Your wallet may be out of sync. This can often be fixed by rescanning the blockchain.";
/* Transaction rejected prompt title */
"Prompts.RecommendRescan.title" = "Transaction Rejected";
/* Share data prompt body */
"Prompts.ShareData.body" = "Help improve BRD by sharing your anonymous data with us";
/* Share data prompt title */
"Prompts.ShareData.title" = "Share Anonymous Data";
/* Enable touch ID prompt body */
"Prompts.TouchId.body" = "Tap Continue to enable Touch ID";
/* Enable Fingerprint prompt body */
"Prompts.TouchId.body.android" = "Tap here to enable fingerprint authentication";
/* Enable touch ID prompt title */
"Prompts.TouchId.title" = "Enable Touch ID";
/* Enable Fingerprint prompt title */
"Prompts.TouchId.title.android" = "Enable Fingerprint Authentication";
/* Button on fingerprint prompt so the user can enter their PIN instead */
"Prompts.TouchId.usePin.android" = "PIN";
/* Upgrade PIN prompt body. */
"Prompts.UpgradePin.body" = "BRD has upgraded to using a 6-digit PIN. Tap Continue to upgrade.";
/* Upgrade PIN prompt title. */
"Prompts.UpgradePin.title" = "Upgrade PIN";
/* Notifications will be added later but users can set their preferences now, which is why we specify "in the future". */
"PushNotifications.body" = "Turn on notifications to receive special messages from BRD in the future.";
/* Push notifications are disabled alert title" */
"PushNotifications.disabled" = "Notifications Disabled";
/* Push notifications settings instructions */
"PushNotifications.enableInstructions" = "Turn on notifications in Settings to receive alerts";
/* Push notifications toggle switch label */
"PushNotifications.label" = "Push Notifications";
/* Push notifications are off label */
"PushNotifications.off" = "Off";
/* Push notifications are on label */
"PushNotifications.on" = "On";
/* Push notifications settings view title label */
"PushNotifications.title" = "Notifications";
/* Address copied message. */
"Receive.copied" = "Copied to clipboard.";
/* Share via email button label */
"Receive.emailButton" = "Email";
/* Request button label */
"Receive.request" = "Request an Amount";
/* Share button label */
"Receive.share" = "Share";
/* Share via text message (SMS) */
"Receive.textButton" = "Text Message";
/* Receive modal title */
"Receive.title" = "Receive";
/* Done button text */
"RecoverWallet.done" = "Done";
/* Recover wallet header */
"RecoverWallet.header" = "Recover Wallet";
/* Reset PIN with paper key: header */
"RecoverWallet.header_reset_pin" = "Reset PIN";
/* Enter paper key instruction */
"RecoverWallet.instruction" = "Enter Paper Key";
/* Recover wallet intro */
"RecoverWallet.intro" = "Recover your BRD with your paper key.";
/* Invalid paper key message */
"RecoverWallet.invalid" = "The paper key you entered is invalid. Please double-check each word and try again.";
/* Previous button accessibility label */
"RecoverWallet.leftArrow" = "Left Arrow";
/* Next button label */
"RecoverWallet.next" = "Next";
/* Reset PIN with paper key: more information button. */
"RecoverWallet.reset_pin_more_info" = "Tap here for more information.";
/* Next button accessibility label */
"RecoverWallet.rightArrow" = "Right Arrow";
/* Recover wallet sub-header */
"RecoverWallet.subheader" = "Enter the paper key for the wallet you want to recover.";
/* Reset PIN with paper key: sub-header */
"RecoverWallet.subheader_reset_pin" = "To reset your PIN, enter the words from your paper key into the boxes below.";
/* No amount entered error message. */
"RequestAnAmount.noAmount" = "Please enter an amount first.";
/* Request a specific amount of bitcoin */
"RequestAnAmount.title" = "Request an Amount";
/* Alert action button label */
"ReScan.alertAction" = "Sync";
/* Alert message body */
"ReScan.alertMessage" = "You will not be able to send money while syncing.";
/* Alert message title */
"ReScan.alertTitle" = "Sync with Blockchain?";
/* extimated time */
"ReScan.body1" = "20-45 minutes";
/* Syncing explanation */
"ReScan.body2" = "If a transaction shows as completed on the network but not in your BRD.";
/* Syncing explanation */
"ReScan.body3" = "You repeatedly get an error saying your transaction was rejected.";
/* Start Sync button label */
"ReScan.buttonTitle" = "Start Sync";
/* Sync blockchain view footer */
"ReScan.footer" = "You will not be able to send money while syncing with the blockchain.";
/* Sync Blockchain view header */
"ReScan.header" = "Sync Blockchain";
/* Subheader label */
"ReScan.subheader1" = "Estimated time";
/* Subheader label */
"ReScan.subheader2" = "When to Sync?";
/* Scan bitcoin address camera flash toggle */
"Scanner.flashButtonLabel" = "Camera Flash";
/* Complete filter label */
"Search.complete" = "complete";
/* Pending filter label */
"Search.pending" = "pending";
/* Received filter label */
"Search.received" = "received";
/* [Click here to] search */
"Search.search" = "Search";
/* Sent filter label */
"Search.sent" = "sent";
/* Face ID button title */
"SecurityCenter.faceIdTitle" = "Face ID";
/* Paper Key button description */
"SecurityCenter.paperKeyDescription" = "The only way to access your assets if you lose or upgrade your phone.";
/* Paper Key button title */
"SecurityCenter.paperKeyTitle" = "Paper Key";
/* PIN button description */
"SecurityCenter.pinDescription" = "Protects your BRD from unauthorized users.";
/* PIN button title */
"SecurityCenter.pinTitle" = "6-Digit PIN";
/* Touch ID button description */
"SecurityCenter.touchIdDescription" = "Conveniently unlock your BRD and send money up to a set limit.";
/* Touch ID button title */
"SecurityCenter.touchIdTitle" = "Touch ID";
/* Security center fingerprint authentication button */
"SecurityCenter.touchIdTitle.android" = "Fingerprint Authentication";
/* Send money amount label */
"Send.amountLabel" = "Amount";
/* Balance: $4.00 */
"Send.balance" = "Balance: %1$@";
/* Instructions how to allow the camera access for the app */
"Send.cameraUnavailabeMessage.android" = "Allow camera access in \"Settings\" > \"Apps\" > \"BRD\" > \"Permissions\"";
/* Permission required to access camera */
"Send.cameraUnavailabeTitle.android" = "BRD is not allowed to access the camera";
/* Camera not allowed message */
"Send.cameraunavailableMessage" = "Go to Settings to allow camera access.";
/* Camera not allowed alert title */
"Send.cameraUnavailableTitle" = "BRD is not allowed to access the camera";
/* Warning when sending to self. */
"Send.containsAddress" = "The destination is your own address. You cannot send to yourself.";
/* Could not create transaction alert title */
"Send.creatTransactionError" = "Could not create transaction.";
/* Description for sending money label */
"Send.descriptionLabel" = "Memo";
/* Empty pasteboard error message */
"Send.emptyPasteboard" = "Pasteboard is empty";
/* "(you) can't send (to your)self" */
"Send.ethSendSelf" = "Can't send to self.";
/* Network Fee: $0.01 */
"Send.fee" = "Network Fee: %1$@";
/* Payee identity not certified alert title. */
"Send.identityNotCertified" = "Payee identity isn't certified.";
/* Insufficient funds error */
"Send.insufficientFunds" = "Insufficient Funds";
/* e,g, "You must have at least $2 in your wallet in order to transfer this type of token." In this case, "token" is an ethereum ERC20 token. */
"Send.insufficientGasMessage" = "You must have at least %1$@ in your wallet in order to transfer this type of token. Would you like to go to your Ethereum wallet now?";
/* Your ethereum balance is insufficient to complete this action. */
"Send.insufficientGasTitle" = "Insufficient Ethereum Balance";
/* e.g. The destination is not a valid (bitcoin) address. */
"Send.invalidAddressMessage" = "The destination address is not a valid %1$@ address.";
/* Invalid address on pasteboard message */
"Send.invalidAddressOnPasteboard" = "Pasteboard does not contain a valid %1$@ address.";
/* Invalid address alert title */
"Send.invalidAddressTitle" = "Invalid Address";
/* Is rescanning error message */
"Send.isRescanning" = "Sending is disabled during a full rescan.";
/* Warning when the user is trying to send bitcoin cash to a legacy bitcoin address (possible, but probably not what the user wants to do) */
"Send.legacyAddressWarning" = "Warning: this is a legacy bitcoin address. Are you sure you want to send Bitcoin Cash to it?";
/* We are loading the request (now) */
"Send.loadingRequest" = "Loading Request";
/* Transaction fee could not be calculated error. */
"Send.nilFeeError" = "Insufficient funds to cover the transaction fee.";
/* Empty address alert message */
"Send.noAddress" = "Please enter the recipient's address.";
/* Emtpy amount alert message */
"Send.noAmount" = "Please enter an amount to send.";
/* No Fees error */
"Send.noFeesError" = "Network Fee conditions are being downloaded. Please try again.";
/* Paste button label */
"Send.pasteLabel" = "Paste";
/* Could not publish transaction alert title */
"Send.publishTransactionError" = "Could not publish transaction.";
/* Could not load remote request error message */
"Send.remoteRequestError" = "Could not load payment request";
/* Scan button label */
"Send.scanLabel" = "Scan";
/* Send button label (the action, "press here to send") */
"Send.sendLabel" = "Send";
/* Send screen title (as in "this is the screen for sending money") */
"Send.title" = "Send";
/* Send money to label */
"Send.toLabel" = "To";
/* Address already used alert message - first part */
"Send.UsedAddress.firstLine" = "Bitcoin addresses are intended for single use only.";
/* Address already used alert message - second part */
"Send.UsedAddress.secondLIne" = "Re-use reduces privacy for both you and the recipient and can result in loss if the recipient doesn't directly control the address.";
/* Address already used alert title */
"Send.UsedAddress.title" = "Address Already Used";
/* About label */
"Settings.about" = "About";
/* Advanced settings header */
"Settings.advanced" = "Advanced";
/* Advanced Settings title */
"Settings.advancedTitle" = "Advanced Settings";
/* i.e. the currency which will be displayed */
"Settings.currency" = "Display Currency";
/* e.g. "USD Settings" (settings for how USD is handled) */
"Settings.currencyPageTitle" = "%1$@ Settings";
/* Section title for a collection of different settings screens, one for each currency */
"Settings.currencySettings" = "Currency Settings";
/* Join Early access label */
"Settings.earlyAccess" = "Join Early Access";
/* Are you enjoying bread alert message body */
"Settings.enjoying" = "Are you enjoying BRD?";
/* Face ID spending limit label */
"Settings.faceIdLimit" = "Face ID Spending Limit";
/* Redeem the funds stored on this private key. */
"Settings.importTitle" = "Redeem Private Key";
/* Manage settings section header */
"Settings.manage" = "Manage";
/* Notifications label */
"Settings.notifications" = "Notifications";
/* Section header for "other settings". */
"Settings.other" = "Other";
/* Preferences settings section header */
"Settings.preferences" = "Preferences";
/* Tap here to reset the list of currencies to the default settings. */
"Settings.resetCurrencies" = "Reset to Default Currencies";
/* Leave review button label */
"Settings.review" = "Leave us a Review";
/* Share anonymous data label */
"Settings.shareData" = "Share Anonymous Data";
/* Sync blockchain label */
"Settings.sync" = "Sync Blockchain";
/* Settings title */
"Settings.title" = "Menu";
/* Touch ID spending limit label */
"Settings.touchIdLimit" = "Touch ID Spending Limit";
/* The fingerprint spending limit */
"Settings.touchIdLimit.android" = "Fingerprint Authentication Spending Limit";
/* Wallet Settings section header */
"Settings.wallet" = "Wallets";
/* Unlink/delete your wallet from the current device. */
"Settings.wipe" = "Unlink from this device";
/* Share data view body */
"ShareData.body" = "Help improve BRD by sharing your anonymous data with us. This does not include any financial information. We respect your financial privacy.";
/* Share data header */
"ShareData.header" = "Share Data?";
/* Share data switch label. */
"ShareData.toggleLabel" = "Share Anonymous Data?";
/* button label */
"StartPaperPhrase.againButtonTitle" = "Write Down Paper Key Again";
/* Paper key explanation text. */
"StartPaperPhrase.body" = "Your paper key is the only way to restore your BRD if your phone is lost, stolen, broken, or upgraded.\n\nWe will show you a list of words to write down on a piece of paper and keep safe.";
/* button label */
"StartPaperPhrase.buttonTitle" = "Write Down Paper Key";
/* Argument is date */
"StartPaperPhrase.date" = "You last wrote down your paper key on %1$@";
/* button label */
"StartViewController.createButton" = "Create New Wallet";
/* Start view message */
"StartViewController.message" = "Moving money forward.";
/* Recover your wallet from a backup */
"StartViewController.recoverButton" = "Recover Wallet";
/* Syncing view connecting state header text */
"SyncingView.connecting" = "Connecting";
/* The sync has failed (to complete) */
"SyncingView.failed" = "Sync Failed";
/* Syncing view header text */
"SyncingView.header" = "Syncing";
/* Retry button label */
"SyncingView.retry" = "Retry";
/* "eg. Synced through <Jan 12, 2015> */
"SyncingView.syncedThrough" = "Synced through %1$@";
/* Syncing view syncing state header text */
"SyncingView.syncing" = "Syncing";
/* 6 d (6 days) */
"TimeSince.days" = "%1$@ d";
/* 6 h (6 hours) */
"TimeSince.hours" = "%1$@ h";
/* 6 m (6 minutes) */
"TimeSince.minutes" = "%1$@ m";
/* 6 s (6 seconds) */
"TimeSince.seconds" = "%1$@ s";
/* Add [this item to the list] */
"TokenList.add" = "Add";
/* Add Wallets [to your home screen] */
"TokenList.addTitle" = "Add Wallets";
/* Hide [this token from view] */
"TokenList.hide" = "Hide";
/* [click here to] Manage [your] Wallets */
"TokenList.manageTitle" = "Manage Wallets";
/* Remove [this item from the list] */
"TokenList.remove" = "Remove";
/* Show [this item on your home screen] */
"TokenList.show" = "Show";
/* You can customize your Touch ID Spending Limit from the [TouchIdSettings.linkText gets added here as a button] */
"TouchIdSettings.customizeText" = "You can customize your Touch ID spending limit from the %1$@.";
/* Fingerprint enabling description body */
"TouchIdSettings.customizeText.android" = "You can customize your Fingerprint Authentication Spending Limit from the Fingerprint Authorization Spending Limit screen";
/* Instruction for the fingerprint setup */
"TouchIdSettings.disabledWarning.body.android" = "You have not enabled fingerprint authentication on this device. Go to Settings -> Security to set up fingerprint authentication.";
/* Fingerprint Is Not Setup */
"TouchIdSettings.disabledWarning.title.android" = "Fingerprint Authentication Not Enabled";
/* Touch Id screen label */
"TouchIdSettings.label" = "Use your fingerprint to unlock your BRD and send money up to a set limit.";
/* Link Text (see TouchIdSettings.customizeText) */
"TouchIdSettings.linkText" = "Touch ID Spending Limit Screen";
/* Spending Limit: b100,000 ($100) */
"TouchIdSettings.spendingLimit" = "Spending limit: %1$@ (%2$@)";
/* Touch id switch label. */
"TouchIdSettings.switchLabel" = "Enable Touch ID for BRD";
/* Enable fingerprint for this wallet called Bread */
"TouchIdSettings.switchLabel.android" = "Enable Fingerprint Authentication";
/* Touch ID settings view title */
"TouchIdSettings.title" = "Touch ID";
/* Fingerprint authentication label */
"TouchIdSettings.title.android" = "Fingerprint Authentication";
/* Touch ID unavailable alert message */
"TouchIdSettings.unavailableAlertMessage" = "You have not set up Touch ID on this device. Go to Settings->Touch ID & Passcode to set it up now.";
/* Touch ID unavailable alert title */
"TouchIdSettings.unavailableAlertTitle" = "Touch ID Not Set Up";
/* Always require passcode option */
"TouchIdSpendingLimit" = "Always require passcode";
/* Touch ID spending limit screen body */
"TouchIdSpendingLimit.body" = "You will be asked to enter your 6-digit PIN to send any transaction over your spending limit, and every 48 hours since the last time you entered your 6-digit PIN.";
/* Touch Id spending limit screen title */
"TouchIdSpendingLimit.title" = "Touch ID Spending Limit";
/* name of spending limit when using fingerprint authorization */
"TouchIdSpendingLimit.title.android" = "Fingerprint Authorization Spending Limit";
/* Availability status text */
"Transaction.available" = "Available to Spend";
/* Transaction complete label */
"Transaction.complete" = "Complete";
/* Transaction is confirming status text */
"Transaction.confirming" = "In Progress";
/* eg. Ending balance: $50.00 */
"Transaction.ending" = "Ending balance: %1$@";
/* Exchange rate on date header */
"Transaction.exchangeOnDayReceived" = "Exchange rate when received:";
/* Exchange rate on date header */
"Transaction.exchangeOnDaySent" = "Exchange rate when sent:";
/* Transaction failed status text */
"Transaction.failed" = "Failed";
/* (b600 fee) */
"Transaction.fee" = "(%1$@ fee)";
/* Invalid transaction */
"Transaction.invalid" = "INVALID";
/* Timestamp label for event that just happened */
"Transaction.justNow" = "just now";
/* Transaction is pending status text */
"Transaction.pending" = "Pending";
/* Receive status text: 'In progress: 20%' */
"Transaction.receivedStatus" = "In progress: %1$@";
/* Send status text: 'In progress: 20%' */
"Transaction.sendingStatus" = "In progress: %1$@";
/* sending to <address> */
"Transaction.sendingTo" = "sending to %1$@";
/* sent to <address> */
"Transaction.sentTo" = "sent to %1$@";
/* eg. Starting balance: $50.00 */
"Transaction.starting" = "Starting balance: %1$@";
/* e.g. "[The money you paid was a] Fee for token transfer: BRD" (BRD is the token that was transfered) */
"Transaction.tokenTransfer" = "Fee for token transfer: %1$@";
/* Waiting to be confirmed string */
"Transaction.waiting" = "Waiting to be confirmed. Some merchants require confirmation to complete a transaction. Estimated time: 1-2 hours.";
/* e.g. I received money from an account. */
"TransactionDetails.account" = "account";
/* Address received from header */
"TransactionDetails.addressFromHeader" = "From";
/* Address sent to header */
"TransactionDetails.addressToHeader" = "To";
/* e.g. "(this was received) via (address #1)" via = by way of */
"TransactionDetails.addressViaHeader" = "Via";
/* Amount section header */
"TransactionDetails.amountHeader" = "Amount";
/* "(it was worth) $100 when sent, (and it is worth) $200 now" */
"TransactionDetails.amountWhenReceived" = "%1$@ when received, %2$@ now";
/* "(it was worth) $100 when sent, (and it is worth) $200 now" */
"TransactionDetails.amountWhenSent" = "%1$@ when sent, %2$@ now";
/* Block height label */
"TransactionDetails.blockHeightLabel" = "Confirmed in Block";
/* Memo section header */
"TransactionDetails.commentsHeader" = "Memo";
/* Memo field placeholder */
"TransactionDetails.commentsPlaceholder" = "Add memo...";
/* Timestamp section header for complete tx */
"TransactionDetails.completeTimestampHeader" = "Complete";
/* Empty transaction list message. */
"TransactionDetails.emptyMessage" = "Your transactions will appear here.";
/* e.g. the users balance after the transaction was completed */
"TransactionDetails.endingBalanceHeader" = "Ending Balance";
/* Exchange rate section header */
"TransactionDetails.exchangeRateHeader" = "Exchange Rate";
/* Tx detail field header */
"TransactionDetails.feeHeader" = "Total Fee";
/* "Received [$5] at [which of my addresses]" => This is the "at [which of my addresses]" part. */
"TransactionDetails.from" = "at %1$@";
/* Tx detail field header */
"TransactionDetails.gasLimitHeader" = "Gas Limit";
/* Tx detail field header */
"TransactionDetails.gasPriceHeader" = "Gas Price";
/* Label showing the transaction was started (initialized) */
"TransactionDetails.initializedTimestampHeader" = "Initialized";
/* More button title */
"TransactionDetails.more" = "More...";
/* Moved $5.00 (as in "I moved $5 to another location") */
"TransactionDetails.moved" = "Moved %1$@";
/* Moved $5.00 */
"TransactionDetails.movedAmountDescription" = "Moved <b>%1$@</b>";
/* eg. Confirmed in Block: Not Confirmed */
"TransactionDetails.notConfirmedBlockHeightLabel" = "Not Confirmed";
/* "Received [$5] at [which of my addresses]" => This is the "Received [$5]" part. */
"TransactionDetails.received" = "Received %1$@";
/* Received $5.00 */
"TransactionDetails.receivedAmountDescription" = "Received <b>%1$@</b>";
/* received from <address> */
"TransactionDetails.receivedFrom" = "received from %1$@";
/* received via <address> */
"TransactionDetails.receivedVia" = "received via %1$@";
/* receiving from <address> */
"TransactionDetails.receivingFrom" = "receiving from %1$@";
/* receiving via <address> */
"TransactionDetails.receivingVia" = "receiving via %1$@";
/* "Sent [$5] to [address]" => This is the "Sent [$5]" part. */
"TransactionDetails.sent" = "Sent %1$@";
/* Sent $5.00 */
"TransactionDetails.sentAmountDescription" = "Sent <b>%1$@</b>";
/* Show Details button */
"TransactionDetails.showDetails" = "Show Details";
/* The balance the user started with before the transaction completed */
"TransactionDetails.startingBalanceHeader" = "Starting Balance";
/* Status section header */
"TransactionDetails.statusHeader" = "Status";
/* Transaction Details Title */
"TransactionDetails.title" = "Transaction Details";
/* Hide Details button */
"TransactionDetails.titleFailed" = "Hide Details";
/* Transaction Details Title - Internal */
"TransactionDetails.titleInternal" = "Internal";
/* Transaction Details Title - Received */
"TransactionDetails.titleReceived" = "Received";
/* Transaction Details Title - Receiving */
"TransactionDetails.titleReceiving" = "Receiving";
/* Transaction Details Title - Sending */
"TransactionDetails.titleSending" = "Sending";
/* Transaction Details Title - Sent */
"TransactionDetails.titleSent" = "Sent";
/* "Sent [$5] to [address]" => This is the "to [address]" part. */
"TransactionDetails.to" = "to %1$@";
/* Tx detail field header */
"TransactionDetails.totalHeader" = "Total";
/* Transaction ID header */
"TransactionDetails.txHashHeader" = "Transaction ID";
/* (this transaction was) Received at this address: */
"TransactionDirection.address" = "Received at this Address";
/* (this transaction was) Sent to this address: */
"TransactionDirection.to" = "Sent to this Address";
/* Disabled until date */
"UnlockScreen.disabled" = "Disabled until: %1$@";
/* Unlock with FaceID accessibility label */
"UnlockScreen.faceIdText" = "Unlock with FaceID";
/* My Address button title */
"UnlockScreen.myAddress" = "My Address";
/* Reset PIN with Paper Key button label. */
"UnlockScreen.resetPin" = "Reset PIN";
/* Scan button title */
"UnlockScreen.scan" = "Scan";
/* Instruction to touch the sensor for fingerprint authentication */
"UnlockScreen.touchIdInstructions.android" = "Touch Sensor";
/* TouchID prompt text */
"UnlockScreen.touchIdPrompt" = "Unlock your BRD.";
/* Device authentication body */
"UnlockScreen.touchIdPrompt.android" = "Please unlock your Android device to continue.";
/* Unlock with TouchID accessibility label */
"UnlockScreen.touchIdText" = "Unlock with TouchID";
/* Device authentication title */
"UnlockScreen.touchIdTitle.android" = "Authentication required";
/* Update PIN caption text */
"UpdatePin.caption" = "Remember this PIN. If you forget it, you won't be able to access your assets.";
/* PIN creation info. */
"UpdatePin.createInstruction" = "Your PIN will be used to unlock your BRD and send money.";
/* Update PIN title */
"UpdatePin.createTitle" = "Set PIN";
/* Update PIN title */
"UpdatePin.createTitleConfirm" = "Re-Enter PIN";
/* Enter current PIN instruction */
"UpdatePin.enterCurrent" = "Enter your current PIN.";
/* Enter new PIN instruction */
"UpdatePin.enterNew" = "Enter your new PIN.";
/* Re-Enter new PIN instruction */
"UpdatePin.reEnterNew" = "Re-Enter your new PIN.";
/* Update PIN failure error message. */
"UpdatePin.setPinError" = "Sorry, could not update PIN.";
/* Update PIN failure alert view title */
"UpdatePin.setPinErrorTitle" = "Update PIN Error";
/* Update PIN title */
"UpdatePin.updateTitle" = "Update PIN";
/* Authorize to copy wallet addresses alert message */
"URLHandling.addressaddressListAlertMessage" = "Copy wallet addresses to clipboard?";
/* Authorize to copy wallet address PIN view prompt. */
"URLHandling.addressList" = "Authorize to copy wallet address to clipboard";
/* Authorize to copy wallet address alert title */
"URLHandling.addressListAlertTitle" = "Copy Wallet Addresses";
/* Copy wallet addresses alert button label */
"URLHandling.copy" = "Copy";
/* Verify PIN for transaction view body */
"VerifyPin.authorize" = "Please enter your PIN to authorize this transaction.";
/* Verify PIN view body */
"VerifyPin.continueBody" = "Please enter your PIN to continue.";
/* Verify PIN view title */
"VerifyPin.title" = "PIN Required";
/* Authorize transaction with touch id message */
"VerifyPin.touchIdMessage" = "Authorize this transaction";
/* 'No wallet' warning for watch app */
"Watch.noWalletWarning" = "Open the BRD iPhone app to set up your wallet.";
/* Dismiss button label */
"Webview.dismiss" = "Dismiss";
/* Webview loading error message */
"Webview.errorMessage" = "There was an error loading the content. Please try again.";
/* Updating webview message */
"Webview.updating" = "Updating...";
/* Welcome screen text. (?) will be replaced with the help icon users should look for. */
"Welcome.body" = "Breadwallet has changed its name to BRD, with a brand new look and some new features.\n\nIf you need help, look for the (?) in the top right of most screens.";
/* Top title of welcome screen */
"Welcome.title" = "Welcome to BRD!";
/* Wipe wallet alert message */
"WipeWallet.alertMessage" = "Are you sure you want to delete this wallet?";
/* Wipe wallet alert title */
"WipeWallet.alertTitle" = "Wipe Wallet?";
/* Failed wipe wallet alert message */
"WipeWallet.failedMessage" = "Failed to wipe wallet.";
/* Failed wipe wallet alert title */
"WipeWallet.failedTitle" = "Failed";
/* Enter phrase to wipe wallet instruction. (Important to explain it is the CURRENT [this wallet's] paper key that needs to be entered). */
"WipeWallet.instruction" = "To start a new wallet or restore an existing wallet, you must first erase the wallet that is currently installed. To continue, enter the current wallet's Paper Key.";
/* Instructions for unlinking the wallet */
"WipeWallet.startMessage" = "Starting or recovering another wallet allows you to access and manage a different BRD wallet on this device.";
/* Start wipe wallet view warning */
"WipeWallet.startWarning" = "Your current wallet will be removed from this device. If you wish to restore it in the future, you will need to enter your Paper Key.";
/* Unlink this wallet from this device. */
"WipeWallet.title" = "Start or Recover Another Wallet";
/* Wipe wallet button title */
"WipeWallet.wipe" = "Wipe";
/* Wiping activity message */
"WipeWallet.wiping" = "Wiping...";
/* Paper key instructions. */
"WritePaperPhrase.instruction" = "Write down each word in order and store it in a safe place.";
/* button label */
"WritePaperPhrase.next" = "Next";
/* button label */
"WritePaperPhrase.previous" = "Previous";
/* 1 of 3 */
"WritePaperPhrase.step" = "%1$li of %2$li";
